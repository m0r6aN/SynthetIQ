// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable

namespace SynthetIQ.DbContext.Models;

public partial class SynthetIQContext : Microsoft.EntityFrameworkCore.DbContext
{
    public SynthetIQContext(DbContextOptions<SynthetIQContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Assistant> Assistants { get; set; }

    public virtual DbSet<Capability> Capabilities { get; set; }

    public virtual DbSet<Exception> Exceptions { get; set; }

    public virtual DbSet<Llm> Llms { get; set; }

    public virtual DbSet<Project> Projects { get; set; }

    public virtual DbSet<Tag> Tags { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Assistant>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Assistan__3756F7509AB9ACC4");

            entity.ToTable("Assistant");

            entity.Property(e => e.Description).IsRequired();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasMany(d => d.Tags).WithMany(p => p.Assistants)
                .UsingEntity<Dictionary<string, object>>(
                    "AssistantTag",
                    r => r.HasOne<Tag>().WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Assistant__TagID__46E78A0C"),
                    l => l.HasOne<Assistant>().WithMany()
                        .HasForeignKey("AssistantId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Assistant__Assis__45F365D3"),
                    j =>
                    {
                        j.HasKey("AssistantId", "TagId").HasName("PK_AssistantTags");
                        j.ToTable("AssistantTag");
                        j.IndexerProperty<int>("AssistantId").HasColumnName("AssistantID");
                        j.IndexerProperty<int>("TagId").HasColumnName("TagID");
                    });
        });

        modelBuilder.Entity<Capability>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Capabilities");

            entity.ToTable("Capability");

            entity.Property(e => e.Value)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Exception>(entity =>
        {
            entity.HasKey(e => e.ExceptionId).HasName("PK__Exceptio__26981DA87F617478");

            entity.ToTable("Exception");

            entity.Property(e => e.ExceptionId).HasColumnName("ExceptionID");
            entity.Property(e => e.ExceptionDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.ExceptionMessage).IsRequired();
            entity.Property(e => e.Source).HasMaxLength(255);
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.Exceptions)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Exception__UserI__52593CB8");
        });

        modelBuilder.Entity<Llm>(entity =>
        {
            entity.HasKey(e => e.LlmconfigurationId).HasName("PK__LLMConfi__66990F00C020AF15");

            entity.ToTable("LLM");

            entity.Property(e => e.LlmconfigurationId).HasColumnName("LLMConfigurationID");
            entity.Property(e => e.Apikey)
                .IsRequired()
                .HasMaxLength(255)
                .HasColumnName("APIKey");
            entity.Property(e => e.AssistantId).HasColumnName("AssistantID");
            entity.Property(e => e.Endpoints).IsRequired();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Url)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.Assistant).WithMany(p => p.Llms)
                .HasForeignKey(d => d.AssistantId)
                .HasConstraintName("FK__LLMConfig__Assis__3C69FB99");
        });

        modelBuilder.Entity<Project>(entity =>
        {
            entity.HasKey(e => e.ProjectId).HasName("PK__Projects__761ABED075D3F16E");

            entity.ToTable("Project");

            entity.Property(e => e.ProjectId).HasColumnName("ProjectID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Description).IsRequired();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasMany(d => d.Assistants).WithMany(p => p.Projects)
                .UsingEntity<Dictionary<string, object>>(
                    "ProjectAssistant",
                    r => r.HasOne<Assistant>().WithMany()
                        .HasForeignKey("AssistantId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__ProjectAs__Assis__4AB81AF0"),
                    l => l.HasOne<Project>().WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__ProjectAs__Proje__49C3F6B7"),
                    j =>
                    {
                        j.HasKey("ProjectId", "AssistantId").HasName("PK_ProjectAssistants");
                        j.ToTable("ProjectAssistant");
                        j.IndexerProperty<int>("ProjectId").HasColumnName("ProjectID");
                        j.IndexerProperty<int>("AssistantId").HasColumnName("AssistantID");
                    });

            entity.HasMany(d => d.Tags).WithMany(p => p.Projects)
                .UsingEntity<Dictionary<string, object>>(
                    "ProjectTag",
                    r => r.HasOne<Tag>().WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__ProjectTa__TagID__4316F928"),
                    l => l.HasOne<Project>().WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__ProjectTa__Proje__4222D4EF"),
                    j =>
                    {
                        j.HasKey("ProjectId", "TagId").HasName("PK_ProjectTags");
                        j.ToTable("ProjectTag");
                        j.IndexerProperty<int>("ProjectId").HasColumnName("ProjectID");
                        j.IndexerProperty<int>("TagId").HasColumnName("TagID");
                    });
        });

        modelBuilder.Entity<Tag>(entity =>
        {
            entity.HasKey(e => e.TagId).HasName("PK__Tags__657CFA4C112804F4");

            entity.ToTable("Tag");

            entity.HasIndex(e => e.Name, "UQ__Tags__737584F61264A785").IsUnique();

            entity.Property(e => e.TagId).HasColumnName("TagID");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(255);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCACECF04EDF");

            entity.ToTable("User");

            entity.HasIndex(e => e.Username, "UQ__Users__536C85E4ECEF6B32").IsUnique();

            entity.HasIndex(e => e.Email, "UQ__Users__A9D10534FD4DD99D").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.LastLoginDate).HasColumnType("datetime");
            entity.Property(e => e.PasswordHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}