// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SynthetIQ.DbContext.Models;
using System;
using System.Collections.Generic;

namespace SynthetIQ.DbContext.Models.Configurations
{
    public partial class ProjectConfiguration : IEntityTypeConfiguration<Project>
    {
        public void Configure(EntityTypeBuilder<Project> entity)
        {
            entity.HasKey(e => e.ProjectId).HasName("PK__Projects__761ABED008309A37");

            entity.Property(e => e.ProjectId).HasColumnName("ProjectID");
            entity.Property(e => e.CreatedDate)
            .HasDefaultValueSql("(getdate())")
            .HasColumnType("datetime");
            entity.Property(e => e.Description).IsRequired();
            entity.Property(e => e.Name)
            .IsRequired()
            .HasMaxLength(255);

            entity.HasMany(d => d.Assistants).WithMany(p => p.Projects)
            .UsingEntity<Dictionary<string, object>>(
                "ProjectAssistant",
                r => r.HasOne<Assistant>().WithMany()
                    .HasForeignKey("AssistantId")
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ProjectAs__Assis__4AB81AF0"),
                l => l.HasOne<Project>().WithMany()
                    .HasForeignKey("ProjectId")
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ProjectAs__Proje__49C3F6B7"),
                j =>
                {
                    j.HasKey("ProjectId", "AssistantId");
                    j.ToTable("ProjectAssistants");
                    j.IndexerProperty<int>("ProjectId").HasColumnName("ProjectID");
                    j.IndexerProperty<int>("AssistantId").HasColumnName("AssistantID");
                });

            entity.HasMany(d => d.Tags).WithMany(p => p.Projects)
            .UsingEntity<Dictionary<string, object>>(
                "ProjectTag",
                r => r.HasOne<Tag>().WithMany()
                    .HasForeignKey("TagId")
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ProjectTa__TagID__4316F928"),
                l => l.HasOne<Project>().WithMany()
                    .HasForeignKey("ProjectId")
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__ProjectTa__Proje__4222D4EF"),
                j =>
                {
                    j.HasKey("ProjectId", "TagId");
                    j.ToTable("ProjectTags");
                    j.IndexerProperty<int>("ProjectId").HasColumnName("ProjectID");
                    j.IndexerProperty<int>("TagId").HasColumnName("TagID");
                });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Project> entity);
    }
}
